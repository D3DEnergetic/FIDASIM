#!/usr/bin/env python

import argparse
import os
import re
import glob
import tarfile
import tempfile
import subprocess

def main():
    parser = argparse.ArgumentParser(description="Extracts fast-ion distribution CDF file from a TRANSP run")

    parser.add_argument('path',
                        help='Result directory')
    parser.add_argument('runid',
                        help='TRANSP run ID')
    parser.add_argument('-fid','--file_id',
                        nargs='+',
                        default=[],
                        help='File ID list e.g. 1 2 3 ...')
    parser.add_argument('-d','--device',
                        default='D3D',
                        help='Set device')
    parser.add_argument('-o','--output_dir',
                        default='.',
                        help = 'Output directory. Default = cwd')
    parser.add_argument('-t','--type',
                        default = 'c',
                        help = 'Type of distribution: c: Guiding Center (default) or p: Particle Location')
    parser.add_argument('-v','--verbose',
                        action = 'store_true',
                        help = 'Verbose')
    parser.add_argument('-db','--debug',
                        action = 'store_true',
                        help = 'Debug mode')

    args = parser.parse_args()
    if not os.access(args.path,os.R_OK):
        print('\033[91m'+'ERROR: You do not have read permissions in the TRANSP result directory ('+args.path+')'+'\033[0m')
        exit()

    if not os.access(args.output_dir,os.W_OK):
        print('\033[91m'+'ERROR: You do not have write permissions in the output directory ('+args.output_dir+')'+'\033[0m')
        exit()

    fileid_list = args.file_id
    paths = []
    if not fileid_list:
       file_list = glob.glob(os.path.abspath(args.path)+'/'+args.runid+'.DATA*')
       for f in file_list:
           if f[-1] == '~':
               continue
           if f.endswith('tar.gz'):
               tar = tarfile.open(f)
               tmpdir = tempfile.mkdtemp()
               dirnum = tar.getmembers()[0].name.split('/')[0] 
               tar.extractall(path=tmpdir)
               paths.append(tmpdir+'/'+dirnum)
           else:
               paths.append(os.path.abspath(args.path))
           fileid_list.append(re.match('.*?([0-9]+)~?(.tar.gz)?$',f).group(1))
    else:
       for id in fileid_list:
           f = sorted(glob.glob(os.path.abspath(args.path)+'/'+args.runid+'.DATA'+id+'*'))[0]
           if f.endswith('tar.gz'):
               tar = tarfile.open(f)
               tmpdir = tempfile.mkdtemp()
               dirnum = tar.getmembers()[0].name.split('/')[0] 
               tar.extractall(path=tmpdir)
               paths.append(tmpdir+'/'+dirnum)
           else:
               paths.append(os.path.abspath(args.path))
               
    for i, id in enumerate(fileid_list):
       args_dict = {'rid':args.runid,'path':paths[i],
                    'fileid':id,'device':args.device,
                    'outdir':os.path.abspath(args.output_dir),
                    'type':args.type}
    
       fbm_script = """
                    %(rid)s
                    %(path)s
                    q
                    %(fileid)s
                    t
                    %(device)s
                    x
                    %(outdir)s
                    q
                    w
                    %(type)s
                    q
                    q
                    q

                    """%args_dict

       fbm_script = "\n".join([line.lstrip() for line in fbm_script.splitlines()])

       if args.verbose:
           print(paths[i]+'/'+args.runid+'.DATA'+id)

       if not args.debug:
           proc = subprocess.Popen('get_fbm',stdin=subprocess.PIPE,stdout=subprocess.PIPE)
           out, err = proc.communicate(input=fbm_script)
       else:
           print(fbm_script)
         
if __name__=='__main__':
    main()
